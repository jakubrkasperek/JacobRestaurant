// <auto-generated />
using System;
using JacobRestaurant;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JacobRestaurant.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220122103559_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("JacobRestaurant.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Burgers"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Drinks"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Desserts"
                        });
                });

            modelBuilder.Entity("JacobRestaurant.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DishId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            CategoryId = 1,
                            Description = "Very big burger",
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/10/05/19/55/hamburger-5630646_960_720.jpg",
                            Name = "Big Burger",
                            Price = 9.99m
                        },
                        new
                        {
                            DishId = 2,
                            CategoryId = 1,
                            Description = "Really small burger",
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/10/05/19/55/hamburger-5630646_960_720.jpg",
                            Name = "Small Burger",
                            Price = 5.50m
                        },
                        new
                        {
                            DishId = 3,
                            CategoryId = 1,
                            Description = "Burger for giga chads",
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/10/05/19/55/hamburger-5630646_960_720.jpg",
                            Name = "Chad Burger",
                            Price = 21.37m
                        },
                        new
                        {
                            DishId = 4,
                            CategoryId = 1,
                            Description = "Burger for vegans",
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/10/05/19/55/hamburger-5630646_960_720.jpg",
                            Name = "Vegan Burger",
                            Price = 28.10m
                        },
                        new
                        {
                            DishId = 5,
                            CategoryId = 3,
                            Description = "Italian tiramisu",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/10/28/19/07/tiramisu-2897900_960_720.jpg",
                            Name = "Tiramisu",
                            Price = 8.50m
                        },
                        new
                        {
                            DishId = 6,
                            CategoryId = 3,
                            Description = "Sweet and cold",
                            ImageUrl = "https://cdn.pixabay.com/photo/2018/04/27/10/44/dessert-3354303_960_720.jpg",
                            Name = "Ice-creams",
                            Price = 8.20m
                        },
                        new
                        {
                            DishId = 7,
                            CategoryId = 3,
                            Description = "It is worth a try",
                            ImageUrl = "https://cdn.pixabay.com/photo/2015/09/23/17/01/ice-cream-954101_960_720.jpg",
                            Name = "Granita",
                            Price = 8.10m
                        },
                        new
                        {
                            DishId = 8,
                            CategoryId = 2,
                            Description = "Just coffee",
                            ImageUrl = "https://cdn.pixabay.com/photo/2019/01/16/22/37/coffee-3936903_960_720.jpg",
                            Name = "Coffee",
                            Price = 6.99m
                        },
                        new
                        {
                            DishId = 9,
                            CategoryId = 2,
                            Description = "Just good tea",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/03/01/05/12/tea-cup-2107599_960_720.jpg",
                            Name = "Tea",
                            Price = 6.99m
                        },
                        new
                        {
                            DishId = 10,
                            CategoryId = 2,
                            Description = "Just water",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/02/02/15/15/bottle-2032980_960_720.jpg",
                            Name = "Water",
                            Price = 3.99m
                        },
                        new
                        {
                            DishId = 11,
                            CategoryId = 2,
                            Description = "Just Coca-Cola",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/02/25/23/12/coca-cola-2099000_960_720.jpg",
                            Name = "Coca-Cola",
                            Price = 5.99m
                        });
                });

            modelBuilder.Entity("JacobRestaurant.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("JacobRestaurant.Models.Dish", b =>
                {
                    b.HasOne("JacobRestaurant.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
